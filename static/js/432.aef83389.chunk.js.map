{"version":3,"file":"static/js/432.aef83389.chunk.js","mappings":"8LAEaA,E,QAAaC,GAAAA,IAAH,k/B,SCCR,SAASC,EAAT,GAA2B,IAAZC,EAAW,EAAXA,SAC5B,OACE,SAACH,EAAD,UACGG,GAGN,C,6FC2DD,UA/DA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,OAEL,EAUD,OACE,UAAC,IAAD,YACE,iJAEA,kBAAMC,aAAa,MAAMC,SAZR,SAAAC,GACnBA,EAAEC,iBACFf,EAASgB,EAAAA,GAAAA,SAAwB,CAAEb,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAMG,WACE,mDAEE,kBAAOS,KAAK,OAAOd,KAAK,OAAOQ,MAAOR,EAAMe,SAAUT,QAGxD,+DAEE,kBACEQ,KAAK,QACLd,KAAK,QACLQ,MAAON,EACPa,SAAUT,QAId,qEAEE,kBACEQ,KAAK,WACLd,KAAK,WACLQ,MAAOJ,EACPW,SAAUT,QAId,mBAAQQ,KAAK,SAAb,+HAIP,C","sources":["components/Form/Form.styled.js","components/Form/Form.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\t\n\nexport const StyledForm = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 250px;\n    margin-bottom: 40px;\n    padding: 20px 40px 40px 40px;\n    background-color: white;\n    border-radius: 30px;\n\n    label, input, button {\n    display: block;\n    }\n\n    input {\n    caret-color: blue;\n    width: 100%;\n    margin-top: 10px;\n    margin-bottom: 15px;\n    outline: none;\n    border: none;\n    background: #ecf0f3;\n    padding: 5px;\n    padding-left: 20px;\n    height: 20px;\n    font-size: 14px;\n    border-radius: 50px;\n    box-shadow: inset 4px 4px 4px #cbced1, inset -4px -4px 4px white;\n    }\n\n    button {\n    border: none;\n    outline: none;\n    color: white;\n    padding: 10px;\n    min-width: 100px;\n    background: #1DA1F2;\n    border-radius: 20px;\n    cursor: pointer;\n    font-weight: 900;\n    box-shadow: 6px 6px 6px #cbced1, -6px -6px 6px white;\n    transition: 0.5s;\n\n    :hover {\n    box-shadow: none;\n    }\n    }\n    `","import React from 'react'\nimport { StyledForm } from './Form.styled'\n\nexport default function Form({children}) {\n  return (\n    <StyledForm>\n      {children}\n    </StyledForm>\n  )\n}\n","import Form from 'components/Form/Form';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nfunction RegisterPage() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Form>\n      <h1>Страница регистрации</h1>\n\n      <form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <label>\n          Имя\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </Form>\n  );\n}\n\nexport default RegisterPage;"],"names":["StyledForm","styled","Form","children","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","autoComplete","onSubmit","e","preventDefault","authOperations","type","onChange"],"sourceRoot":""}